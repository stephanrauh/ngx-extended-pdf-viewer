{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","pdfjsLib","this","addLinkAttributes","link","url","target","rel","enabled","assert","urlNullRemoved","removeNullCharacters","targetStr","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","DEFAULT_LINK_REL","deprecated","details","console","getFilenameFromUrl","anchor","query","end","Math","length","getPdfFilenameFromUrl","defaultFilename","window","filenameForDownload","isDataScheme","warn","reFilename","splitURI","reURI","suggestedFilename","decodeURIComponent","ex","getXfaPageViewport","xfaPage","scale","rotation","width","height","style","viewBox","parseInt","PageViewport","isPdfFile","filename","test","loadScript","src","removeScriptElement","Promise","resolve","reject","script","document","evt","remove","Error","head","documentElement","appendChild","_util","__w_pdfjs_require__","_base_factory","DOMCanvasFactory","BaseCanvasFactory","constructor","ownerDocument","globalThis","super","_document","_createCanvas","canvas","createElement","async","fetchData","asTypedArray","isValidFetchUrl","baseURI","response","fetch","ok","statusText","Uint8Array","stringToBytes","text","request","XMLHttpRequest","DONE","data","responseText","DOMCMapReaderFactory","BaseCMapReaderFactory","_fetchData","isCompressed","then","cMapData","compressionType","DOMStandardFontDataFactory","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","type","offsetX","offsetY","dontFlip","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","transform","clone","slice","convertToViewportPoint","Util","applyTransform","x","y","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","applyInverseTransform","RenderingCancelledException","BaseException","msg","ii","i","StatTimer","started","Object","times","time","name","Date","now","timeEnd","push","start","toString","outBuf","longest","duration","baseUrl","protocol","URL","pdfDateStringRegex","PDFDateString","toDateObject","input","isString","RegExp","matches","year","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","arraysToBytes","arr","resultLength","arrayByteLength","pos","item","itemLength","byteLength","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","strBuf","chunkEnd","chunk","createObjectURL","contentType","forceDataSchema","Blob","digits","buffer","b1","b2","b3","createPromiseCapability","capability","isSettled","get","reason","createValidAbsoluteUrl","absoluteUrl","_isValidProtocol","escapeString","str","replace","match","getModificationDate","date","getUTCMonth","padStart","getVerbosityLevel","verbosity","info","VerbosityLevel","INFOS","isArrayBuffer","v","undefined","isArrayEqual","arr1","arr2","isAscii","isBool","isNum","isSameOrigin","otherUrl","base","origin","e","other","objectFromMap","map","obj","key","value","objectSize","setVerbosityLevel","level","Number","string32","stringToPDFString","code","PDFStringTranslateTable","stringToUTF16BEString","buf","char","stringToUTF8String","escape","utf8StringToString","unescape","encodeURIComponent","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","MARKED","REVIEW","UNMARKED","ACCEPTED","REJECTED","CANCELLED","COMPLETED","GROUP","REPLY","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","WC","WS","DS","WP","DP","O","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","TYPE1","TYPE1STANDARD","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","ERRORS","WARNINGS","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","signatures","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontBuildPath","errorFontGetPath","errorMarkedContent","NEED_PASSWORD","INCORRECT_PASSWORD","unreachable","cond","shadow","prop","enumerable","configurable","writable","BaseExceptionClosure","message","PasswordException","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","NullCharactersRegExp","IsLittleEndianCached","isLittleEndian","buffer8","Uint32Array","view32","IsEvalSupportedCached","isEvalSupported","Function","hexNumbers","Array","keys","n","makeHexColor","r","g","b","m1","m2","p","m","d","getAxialAlignedBoundingBox","p1","p2","p3","p4","inverseTransform","apply3dTransform","singularValueDecompose2dScale","transpose","a","c","first","sx","sy","normalizeRect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","create","context","reset","canvasAndContext","destroy","CMapCompressionType","catch","svg","_display_utils","_font_loader","_node_utils","_annotation_storage","_canvas","_worker_options","_is_node","_message_handler","_metadata","_optional_content_config","_transport_stream","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","ServiceWorkerOptions","showUnverifiedSignatures","DefaultCanvasFactory","isNodeJS","NodeCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","createPDFNetworkStream","setPDFNetworkStreamFactory","pdfNetworkStreamFactory","getDocument","task","PDFDocumentLoadingTask","source","PDFDataRangeTransport","range","params","rangeTransport","worker","location","href","Buffer","isNaN","docBaseUrl","maxImageSize","useWorkerFetch","disableFontFace","useSystemFonts","disableRange","disableStream","disableAutoFetch","workerParams","port","GlobalWorkerOptions","workerPort","PDFWorker","docId","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","httpHeaders","withCredentials","rangeChunkSize","all","workerId","messageHandler","MessageHandler","postMessageTransfers","transport","WorkerTransport","pdfDataRangeTransport","cMapUrl","sendWithPromise","apiVersion","password","ignoreErrors","fontExtraProperties","enableXfa","standardFontDataUrl","PDFDocumentLoadingTaskClosure","nextDocumentId","_capability","_transport","_worker","onPassword","onProgress","onUnsupportedFeature","promise","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","onDataProgress","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","PDFDocumentProxy","_pdfInfo","pdfInfo","fingerprints","annotationStorage","numPages","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getJSActions","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","getDownloadInfo","downloadInfoCapability","getStats","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","saveDocument","size","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","pdfBug","_pageIndex","pageIndex","_pageInfo","pageInfo","_ownerDocument","_stats","_pdfBug","commonObjs","objs","PDFObjects","cleanupAfterRender","pendingCleanup","_intentStates","Map","rotate","userUnit","view","getViewport","getAnnotations","intent","renderingIntent","_annotationsPromise","_annotationsIntent","_jsActionsPromise","getPageJSActions","getXfa","children","render","canvasContext","viewport","renderInteractiveForms","imageLayer","canvasFactory","background","includeAnnotationStorage","optionalContentConfigPromise","_intentState","intentState","set","streamReaderCancelTimeout","clearTimeout","canvasFactoryInstance","displayReadyCapability","fnArray","argsArray","lastChunk","_pumpOperatorList","complete","error","internalRenderTask","_tryCleanup","_abortOperatorList","InternalRenderTask","callback","operatorList","useRequestAnimationFrame","renderTasks","Set","add","renderTask","transparency","optionalContentConfig","operatorListChanged","getOperatorList","opListTask","opListReadCapability","_intentState2","streamTextContent","normalizeWhitespace","disableCombineTextItems","includeMarkedContent","sendWithStream","combineTextItems","highWaterMark","textContent","getTextContent","readableStream","reader","getReader","items","styles","pump","done","getStructTree","_structTreePromise","_destroy","pageCache","waitOn","force","completed","cancel","clear","resetStats","values","_startRenderPage","_renderPageChunk","operatorListChunk","args","streamReader","setTimeout","curIntentState","delete","stats","LoopbackPort","_listeners","_deferred","postMessage","cloned","WeakMap","event","cloneValue","transfers","byteOffset","val","desc","addEventListener","removeEventListener","indexOf","splice","terminate","PDFWorkerClosure","pdfWorkerPorts","isWorkerDisabled","fallbackWorkerSrc","nextFakeWorkerId","fakeWorkerCapability","require","pdfjsFilePath","getWorkerSrc","workerSrc","getMainThreadWorkerMessageHandler","mainWorkerMessageHandler","WorkerMessageHandler","setupFakeWorkerGlobal","loader","eval","createCDNWrapper","wrapper","_port","_webWorker","_messageHandler","_initializeFromPort","_initialize","on","Worker","terminateEarly","onWorkerError","_setupFakeWorker","supportTransfers","sendTest","testObj","workerHandler","fromPort","fontLoader","FontLoader","_onUnsupportedFeature","bind","styleElement","_params","CMapReaderFactory","cMapPacked","StandardFontDataFactory","destroyCapability","_passwordCapability","_networkStream","_fullReader","_lastProgress","pagePromises","setupMessageHandler","AnnotationStorage","page","hasOwnProperty","resetModified","terminated","_hasJSActionsPromise","cancelAllRequests","sink","getFullReader","loaded","read","close","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","begin","_numPages","htmlForXfa","exception","updatePassword","exportedData","has","exportedError","fontRegistry","registerFont","FontFaceObject","finally","imageData","pageProxy","MAX_IMAGE_SIZE_TO_STORE","featureId","serializable","results","OptionalContentConfig","metadata","Metadata","_objs","_ensureObj","objId","resolved","RenderTask","_internalRenderTask","onContinue","InternalRenderTaskClosure","canvasInRendering","WeakSet","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","initializeGraphics","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","executeOperatorList","version","build","BaseFontLoader","nativeFontFaces","addNativeFontFace","nativeFontFace","fonts","insertRule","getElementsByTagName","styleSheet","sheet","missingFile","isFontLoadingAPISupported","createNativeFontFace","UNSUPPORTED_FEATURES","family","rule","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","_loadTestFont","GenericFontLoader","loadingContext","requests","nextRequestId","loadTestFontId","supported","navigator","exec","userAgent","completeRequest","otherRequest","shift","atob","int32","offset","spliceString","s","insert","chunk1","ctx","called","XXXX_VALUE","checksum","btoa","names","loadedName","div","span","body","isFontReady","removeChild","compiledGlyphs","translatedData","cssFontInfo","css","weight","fontWeight","italicAngle","FontFace","fontFamily","mimetype","getPathGenerator","character","cmds","jsBuf","current","__non_webpack_require__","fs","Canvas","process","nw","versions","electron","_storage","_modified","onSetModified","onResetModified","getValue","radioButtonField","getFormValue","ngObj","fieldname","setValue","defaultValue","modified","entry","_setModified","setFormValue","radioValue","getAll","_pattern_helper","MAX_GROUP_SIZE","FULL_CHUNK_HEIGHT","addContextCurrentTransform","mozCurrentTransform","translate","setTransform","resetTransform","_setLineWidth","getLineWidth","_getLineWidth","_","getCurrentTransform","_transformMatrix","getCurrentTransformInverse","f","ad_bc","bc_ad","ctxSave","old","_transformStack","_originalSave","ctxRestore","prev","pop","_originalRestore","ctxTranslate","_originalTranslate","ctxScale","_originalScale","ctxTransform","ctxSetTransform","ctxResetTransform","_originalResetTransform","ctxRotate","angle","cosValue","sinValue","_originalRotate","CachedCanvases","cache","getCanvas","canvasEntry","trackTransform","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","IDENTITY_MATRIX","textMatrixScale","fontMatrix","FONT_IDENTITY_MATRIX","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","TextRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","resumeSMaskCtx","transferMaps","setCurrentPoint","CanvasGraphicsClosure","putBinaryImageData","imgData","ImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","destPos","srcPos","dest","j","thisChunkHeight","elemsInThisChunk","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","ImageKind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","k","kEnd","kEndUnrolled","mask","srcByte","hasTransferMaps","kind","putBinaryImageMask","elem","copyCtxState","sourceCtx","destCtx","properties","property","getLineDash","lineDashOffset","resetCtxToDefault","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","composeSMask","layerCtx","maskCtx","genericComposeSMask","subtype","backdrop","hasBackdrop","composeFn","chunkSize","row","chunkHeight","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","contentVisible","markedContentStack","cachedCanvases","cachedPatterns","_cachedGetSinglePixelWidth","fillStyle","fillRect","transparentCanvas","compositeCtx","apply","_combinedScaleFactor","beginLayout","executionStartIdx","argsArrayLen","chunkOperations","continueCallback","endTime","steps","fnId","OPS","depObjId","objsPool","drawImage","endLayout","_scaleImage","img","tmpCanvas","tmpCtx","widthScale","heightScale","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","_createMaskCanvas","isPatternFill","maskCanvas","objToCanvas","maskToCanvas","cord1","cord2","drawnWidth","drawnHeight","fillCanvas","fillCtx","scaled","mozCurrentTransformInverse","inverse","lineCap","lineJoin","miterLimit","limit","dashArray","dashPhase","states","state","globalAlpha","globalCompositeOperation","suspendSMaskGroup","endSMaskGroup","beginSMaskGroup","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","scaleY","deltaTransform","resumeSMaskGroup","ops","xw","yh","consumePath","getPattern","getSinglePixelWidth","needRestore","paths","pendingTextPaths","beginPath","path","spacing","fontObj","fontRefName","isType3Font","bold","italic","typeface","fallbackName","browserFontSize","mode","rise","paintChar","fillStrokeMode","isAddToPathSet","addToPath","patternTransform","resetLineWidthToOne","isFontSubpixelAAEnabled","showType3Text","glyphs","fontDirection","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","glyph","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","charWidth","vmetric","vx","vy","measuredWidth","characterScaleX","isInFont","scaledAccentX","scaledAccentY","spacingLength","operatorListId","transformed","llx","lly","urx","ury","getColorN_Pattern","IR","color","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","arguments","strokeStyle","getShadingPattern","inv","bl","br","ul","ur","x0","y0","x1","y1","matrix","bbox","group","isolated","knockout","bounds","canvasBounds","scaleX","startTransformInverse","imageSmoothingEnabled","mozImageSmoothingEnabled","COMPILE_TYPE3_GLYPHS","compileType3Glyph","POINT_TYPES","width1","j0","points","lineSize","data0","count","sum","Int32Array","outlines","coords","p0","step","pp","kk","o","l","ll","compiled","skewX","skewY","positions","trans","images","image","w","h","imgToPaint","HTMLElement","position","getCanvasPosition","appendImage","left","top","visible","tag","isVisible","isContentVisible","absDet","sqNorm1","sqNorm2","pixelHeight","EPSILON","op","RadialAxialShadingPattern","MeshShadingPattern","DummyShadingPattern","applyBoundingBox","Path2D","region","BaseShadingPattern","_type","_bbox","_colorStops","_p0","_p1","_r0","_r1","_matrix","_patternCache","_createGradient","grad","colorStop","owner","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","colors","rowSize","tmp","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","_coords","_colors","_figures","_bounds","_background","_createMeshCanvas","boundsWidth","boundsHeight","combinedScale","paddedWidth","BORDER_SIZE","paddedHeight","backgroundColor","matrixScale","temporaryPatternCanvas","PaintType","MAX_PATTERN_SIZE","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","maxSize","realOutputSize","bboxWidth","bboxHeight","cssColor","CallbackKind","StreamKind","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","_processStreamMessage","action","cbSourceName","cbTargetName","_createStreamSink","ah","actionName","handler","send","_postMessage","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","queueingStrategy","self","streamSink","enqueue","isCancelled","lastDesiredSize","sinkCapability","ready","onPull","onCancel","success","_deleteStreamController","allSettled","parsedData","rawData","_metadataMap","_data","getRaw","OptionalContentGroup","creator","_order","_groups","order","groups","off","_evaluateVisibilityExpression","array","operator","element","expression","policy","ids","setVisibility","getOrder","getGroups","getGroup","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_enqueue","found","some","_progressiveDataLength","_loaded","firstReader","_removeRangeReader","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","headersReady","_begin","_end","_queuedChunk","requestsCapability","_scripting_utils","AnnotationElementFactory","parameters","annotationType","AnnotationType","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","FreeTextAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","isRenderable","ignoreBorder","createQuadrilaterals","layer","linkService","downloadManager","imageResourcesPath","svgFactory","enableScripting","_mouseState","mouseState","container","_createContainer","quadrilaterals","_createQuadrilaterals","AnnotationBorderStyleType","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","quadPoints","savedRect","quadPoint","_createPopup","trigger","popup","PopupElement","title","modificationDate","contents","hideWrapper","_renderQuadrilaterals","quadrilateral","className","isTooltipOnly","actions","Action","externalLinkTarget","externalLinkRel","externalLinkEnabled","_bindNamedAction","_bindLink","_bindJSAction","index","linkElement","cloneNode","getDestinationHash","destination","goToDestination","getAnchorUrl","executeNamedAction","jsName","eventBus","dispatch","detail","hasPopup","toLowerCase","JSON","alternativeText","_getKeyModifier","ctrlKey","metaKey","_setEventListener","baseName","eventName","valueGetter","shiftKey","modifier","checked","_setEventListeners","getter","_dispatchEventFromSandbox","setColor","styleName","ColorConverters","commonActions","display","hidden","fieldName","print","focus","preventScroll","userName","readonly","required","bgColor","fgColor","textColor","borderColor","jsEvent","hasAppearance","fieldValue","setPropertyOnSiblings","storage","storedData","valueAsString","elementData","userValue","formattedValue","beforeInputSelectionRange","beforeInputValue","multiLine","blurListener","activeElement","selRange","selStart","selEnd","commitKey","willCommit","selectionStart","selectionEnd","_blurListener","isDown","Keystroke","change","readOnly","maxLen","comb","combWidth","_setTextStyle","TEXT_ALIGNMENT","fontColor","defaultAppearanceData","textAlignment","exportValue","checkbox","buttonValue","radio","emitMessage","pdfButtonValue","radioId","selectElement","combo","options","multiSelect","option","optionElement","displayValue","includes","isExport","multiple","getItems","prototype","call","multipleSelection","selected","indices","editable","changeEx","keyDown","IGNORE_TYPES","parentType","selector","parentId","parentElements","querySelectorAll","parentRect","popupLeft","popupTop","transformOrigin","pinned","hideElement","BACKGROUND_ENLIGHT","dateObject","stringify","toLocaleDateString","toLocaleTimeString","_formatContents","_toggle","_show","_hide","lines","line","pin","zIndex","unpin","append","borderWidth","square","circle","containerClassName","svgElementName","coordinate","vertices","polyline","inkList","inkLists","content","file","_download","openOrDownloadData","AnnotationLayer","sortedAnnotations","popupAnnotations","annotations","rendered","renderedElement","update","elements","makeColorComp","CMYK_G","G_CMYK","G_RGB","G_HTML","G","RGB_G","RGB_HTML","T_HTML","CMYK_RGB","CMYK_HTML","components","RGB_CMYK","renderTextLayer","renderParameters","TextLayerRenderTask","textContentStream","textDivs","textContentItemsStr","enhanceTextSelection","timeout","DEFAULT_FONT_SIZE","ascentCache","AllWhitespaceRegexp","appendText","geom","textDiv","textDivProperties","canvasWidth","hasText","hasEOL","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","tx","fontName","fontHeight","fontAscent","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","dir","_fontInspectorEnabled","shouldScaleText","absScaleX","absScaleY","_textContentStream","angleCos","angleSin","divWidth","divHeight","right","bottom","_canceled","_textDivs","textDivsLength","findPositiveMin","ts","t","expand","_viewport","expanded","expandBounds","boxes","box","x1New","x2New","expandBoundsLTR","divProperties","Float64Array","jj","boxScale","horizon","Infinity","boundary","horizonPart","affectedBoundary","maxXNew","xNew","changedHorizon","lastBoundary","useBoundary","used","concat","_textContent","_container","_textContentItemsStr","_enhanceTextSelection","_reader","_layoutTextLastFontSize","_layoutTextLastFontFamily","_layoutTextCtx","_textDivProperties","_renderingDone","_renderTimer","_processItems","len","parent","classList","setAttribute","parentNode","_layoutText","measureText","fingerprintIsBlockedException","_render","styleCache","textItems","textStyles","expandTextDivs","expandDivs","transformBuf","paddingBuf","divProps","SVGGraphics","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","crcTable","writePngChunk","crc","crc32","deflateSync","literals","deflateSyncUncompressed","maxBlockLength","deflateBlocks","idat","pi","adler","adler32","isMask","encode","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","CHUNK_WRAPPER_SIZE","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","pm","clipCount","maskCount","shadingCount","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","tspan","lineWidthScale","_setStrokeAttributes","txtElement","_ensureTransformGroup","addFontStyle","setAttributeNS","defs","hasChildNodes","setStrokeAlpha","setFillAlpha","xcoords","ycoords","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","clipId","clipPath","clipElement","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","XfaLayer","setupStorage","html","xfaOn","setAttributes","attributes","dataId","xfa","rootHtml","stack","rootDiv","child","childHtml","xmlns","el","_network_utils","http","https","fileUriRegex","PDFNodeStream","parseUrl","sourceUrl","parsedUrl","host","isHttp","isFsUrl","_rangeRequestReaders","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_url","_storedError","_disableRange","_rangeChunkSize","_readableStream","_readCapability","_headersCapability","_error","_setReadableStream","BaseRangeReader","createRequestOptions","headers","auth","hostname","method","handleResponse","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_request","_httpHeaders","Range","stat","createReadStream","createResponseStatusError","contentDisposition","getFilenameFromContentDispositionHeader","returnValues","validateResponseStatus","_content_disposition","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","contentDispositionStr","iter","quot","part","parts","attributePattern","flags","textdecode","encoding","decoder","TextDecoder","fatal","err","quotindex","extvalue","encodingend","langvalue","charset","hex","NetworkManager","getXhr","NetworkManager_getXhr","currXhrId","pendingRequests","requestRange","listeners","requestFull","xhr","xhrId","pendingRequest","onError","onStateChange","onHeadersReceived","onDone","xhrStatus","expectedStatus","getArrayBuffer","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","PDFNetworkStream","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","manager","_onHeadersReceived","_onDone","_onError","_fullRequestId","_headersReceivedCapability","_cachedChunks","fullRequestXhrId","fullRequestXhr","_requestId","onClosed","_close","createFetchOptions","abortController","signal","credentials","redirect","createHeaders","Headers","PDFFetchStream","PDFFetchStreamReader","PDFFetchStreamRangeReader","_withCredentials","AbortController","_abortController","_headers","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_annotation_layer","_text_layer","_svg","_xfa_layer"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn ","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  BaseException,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @returns {string}\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  // modified by ngx-extended-pdf-viewer\n  if (window.PDFViewerApplication.appConfig.filenameForDownload) {\n    return window.PDFViewerApplication.appConfig.filenameForDownload;\n  }\n  // end of modification by ngx-extended-pdf-viewer\n\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch (ex) {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    // modified by ngx-extended-pdf-viewer #864\n    return protocol === \"http:\" || protocol === \"https:\" || protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    // modified by ngx-extended-pdf-viewer\n    if (src.constructor.name === \"Function\") {\n      script.src = src();\n    } else {\n      script.src = src;\n    }\n    // end of modification\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n          \"(\\\\d{4})\" + // Year (required)\n          \"(\\\\d{2})?\" + // Month (optional)\n          \"(\\\\d{2})?\" + // Day (optional)\n          \"(\\\\d{2})?\" + // Hour (optional)\n          \"(\\\\d{2})?\" + // Minute (optional)\n          \"(\\\\d{2})?\" + // Second (optional)\n          \"([Z|+|-])?\" + // Universal time relation (optional)\n          \"(\\\\d{2})?\" + // Offset hour (optional)\n          \"'?\" + // Splitting apostrophe (optional)\n          \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nexport {\n  addLinkAttributes,\n  DEFAULT_LINK_REL,\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PageViewport,\n  PDFDateString,\n  RenderingCancelledException,\n  StatTimer,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1STANDARD: \"TYPE1STANDARD\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  signatures: \"signatures\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontBuildPath: \"errorFontBuildPath\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n    case \"capacitor\": // modified by ngx-extended-pdf-viewer #864\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\", \"\\n\", \"\\r\" and \"\\\"\n  // by \"\\(\", \"\\)\", \"\\\\n\", \"\\\\r\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([()\\\\\\n\\r])/g, match => {\n    if (match === \"\\n\") {\n      return \"\\\\n\";\n    } else if (match === \"\\r\") {\n      return \"\\\\r\";\n    }\n    return `\\\\${match}`;\n  });\n}\n\nfunction isAscii(str) {\n  return /^[\\x00-\\x7F]*$/.test(str);\n}\n\nfunction stringToUTF16BEString(str) {\n  const buf = [\"\\xFE\\xFF\"];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const char = str.charCodeAt(i);\n    buf.push(\n      String.fromCharCode((char >> 8) & 0xff),\n      String.fromCharCode(char & 0xff)\n    );\n  }\n  return buf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nfunction createObjectURL(data, contentType = \"\", forceDataSchema = false) {\n  if (URL.createObjectURL && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n}\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  BaseException,\n  bytesToString,\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  escapeString,\n  FONT_IDENTITY_MATRIX,\n  FontType,\n  FormatError,\n  getModificationDate,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isAscii,\n  isBool,\n  IsEvalSupportedCached,\n  IsLittleEndianCached,\n  isNum,\n  isSameOrigin,\n  isString,\n  MissingPDFException,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  StreamType,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF16BEString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @private\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", `${width}px`);\n    svg.setAttribute(\"height\", `${height}px`);\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @private\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n} from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\n// #171 receive options from ngx-extended-pdf-viewer\nconst ServiceWorkerOptions = {\n  showUnverifiedSignatures: false,\n};\n\nwindow.ServiceWorkerOptions = ServiceWorkerOptions;\n// #171 end\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultStandardFontDataFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string|URL} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|URL|TypedArray|PDFDataRangeTransport|DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\" || src instanceof URL) {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either string, URL, Uint8Array, or parameter object.\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    const value = source[key];\n\n    switch (key) {\n      case \"url\":\n        if (typeof window !== \"undefined\") {\n          try {\n            // The full path is required in the 'url' field.\n            params[key] = new URL(value, window.location).href;\n            continue;\n          } catch (ex) {\n            warn(`Cannot create valid URL: \"${ex}\".`);\n          }\n        } else if (typeof value === \"string\" || value instanceof URL) {\n          params[key] = value.toString(); // Support Node.js environments.\n          continue;\n        }\n        throw new Error(\n          \"Invalid PDF url data: \" +\n            \"either string or URL-object is expected in the url property.\"\n        );\n      case \"range\":\n        rangeTransport = value;\n        continue;\n      case \"worker\":\n        worker = value;\n        continue;\n      case \"data\":\n        // Converting string or array-like data to Uint8Array.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          isNodeJS &&\n          typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n          value instanceof Buffer // eslint-disable-line no-undef\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (value instanceof Uint8Array) {\n          break; // Use the data as-is when it's already a Uint8Array.\n        } else if (typeof value === \"string\") {\n          params[key] = stringToBytes(value);\n        } else if (\n          typeof value === \"object\" &&\n          value !== null &&\n          !isNaN(value.length)\n        ) {\n          params[key] = new Uint8Array(value);\n        } else if (isArrayBuffer(value)) {\n          params[key] = new Uint8Array(value);\n        } else {\n          throw new Error(\n            \"Invalid PDF binary data: either typed array, \" +\n              \"string, or array-like object is expected in the data property.\"\n          );\n        }\n        continue;\n    }\n    params[key] = value;\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.StandardFontDataFactory =\n    params.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n  params.enableXfa = params.enableXfa === true;\n\n  if (\n    typeof params.docBaseUrl !== \"string\" ||\n    isDataScheme(params.docBaseUrl)\n  ) {\n    // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n    // URLs anyway. We want to avoid sending them to the worker-thread, since\n    // they contain the *entire* PDF document and can thus be arbitrarily long.\n    params.docBaseUrl = null;\n  }\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.useWorkerFetch !== \"boolean\") {\n    params.useWorkerFetch =\n      params.CMapReaderFactory === DOMCMapReaderFactory &&\n      params.StandardFontDataFactory === DOMStandardFontDataFactory;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace =\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS;\n  }\n  if (typeof params.useSystemFonts !== \"boolean\") {\n    params.useSystemFonts =\n      !(\n        (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n        isNodeJS\n      ) && !params.disableFontFace;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              contentDispositionFilename: params.contentDispositionFilename,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          // #171 receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\n            \"showUnverifiedSignatures\",\n            window.ServiceWorkerOptions.showUnverifiedSignatures\n          );\n          // #171 end of receive options from ngx-extended-pdf-viewer\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise} A promise that is resolved when the worker ID of the\n *   `MessageHandler` is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n    source.contentDispositionFilename =\n      pdfDataRangeTransport.contentDispositionFilename;\n  }\n  // #376 modified by ngx-extended-pdf-viewer\n  let cMapUrl = source.cMapUrl;\n  if (cMapUrl.constructor.name === \"Function\") {\n    cMapUrl = cMapUrl();\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n      enableXfa: source.enableXfa,\n      useSystemFonts: source.useSystemFonts,\n      cMapUrl: source.useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: source.useWorkerFetch\n        ? source.standardFontDataUrl\n        : null,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n *\n * @typedef {Object} PDFDocumentLoadingTask\n * @property {string} docId - Unique identifier for the document loading task.\n * @property {boolean} destroyed - Whether the loading task is destroyed or not.\n * @property {function} [onPassword] - Callback to request a password if a wrong\n *   or no password was provided. The callback receives two parameters: a\n *   function that should be called with the new password, and a reason (see\n *   {@link PasswordResponses}).\n * @property {function} [onProgress] - Callback to be able to monitor the\n *   loading progress of the PDF file (necessary to implement e.g. a loading\n *   bar). The callback receives an {@link OnProgressParameters} argument.\n * @property {function} [onUnsupportedFeature] - Callback for when an\n *   unsupported feature is used in the PDF document. The callback receives an\n *   {@link UNSUPPORTED_FEATURES} argument.\n * @property {Promise<PDFDocumentProxy>} promise - Promise for document loading\n *   task completion.\n * @property {function} destroy - Abort all network requests and destroy\n *   the worker. Returns a promise that is resolved when destruction is\n *   completed.\n */\n\n/**\n * @type {any}\n * @ignore\n */\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique identifier for the document loading task.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Whether the loading task is destroyed or not.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if a wrong or no password was provided.\n       * The callback receives two parameters: a function that should be called\n       * with the new password, and a reason (see {@link PasswordResponses}).\n       * @type {function}\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar).\n       * The callback receives an {@link OnProgressParameters} argument.\n       * @type {function}\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback for when an unsupported feature is used in the PDF document.\n       * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n       * @type {function}\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise<PDFDocumentProxy>}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * @returns {Promise<void>} A promise that is resolved when destruction is\n     *   completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"fingerprint\", {\n        get() {\n          deprecated(\n            \"`PDFDocumentProxy.fingerprint`, \" +\n              \"please use `PDFDocumentProxy.fingerprints` instead.\"\n          );\n          return this.fingerprints[0];\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return !!this._transport._htmlForXfa;\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree (like getJavaScript);\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @typedef {Object} PDFDocumentStats\n   * @property {Object<string, boolean>} streamTypes - Used stream types in the\n   *   document (an item is set to true if specific stream ID was used in the\n   *   document).\n   * @property {Object<string, boolean>} fontTypes - Used font types in the\n   *   document (an item is set to true if specific font ID was used in the\n   *   document).\n   */\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      this._transport.annotationStorage.size <= 0\n    ) {\n      deprecated(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<Array<Object> | null>} A promise that is resolved with an\n   *   {Array<Object>} containing /AcroForm field data for the JS sandbox,\n   *   or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be either 'display' (viewable annotations) or 'print' (printable\n *   annotations). If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\n *   The default value is 'display'.\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\n *   form elements are rendered in the display layer. If so, we do not render\n *   them on the canvas as well. The default value is `false`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {boolean} [includeAnnotationStorage] - Render stored interactive\n *   form element data, from the {@link AnnotationStorage}-instance, onto the\n *   canvas itself; useful e.g. for printing. The default value is `false`.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\n *   The default value is 'display'.\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    const renderingIntent =\n      intent === \"display\" || intent === \"print\" ? intent : null;\n\n    if (\n      !this._annotationsPromise ||\n      this._annotationsIntent !== renderingIntent\n    ) {\n      this._annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        renderingIntent\n      );\n      this._annotationsIntent = renderingIntent;\n    }\n    return this._annotationsPromise;\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return (this._jsActionsPromise ||= this._transport.getPageJSActions(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    includeAnnotationStorage = false,\n    optionalContentConfigPromise = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const annotationStorage = includeAnnotationStorage\n      ? this._transport.annotationStorage.serializable\n      : null;\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n        annotationStorage,\n      });\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({ intent = \"display\" } = {}) {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const renderingIntent = `oplist-${\n      intent === \"print\" ? \"print\" : \"display\"\n    }`;\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n    includeMarkedContent = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n        includeMarkedContent: includeMarkedContent === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return (this._structTreePromise ||= this._transport.getStructTree(\n      this._pageIndex\n    ));\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const [intent, intentState] of this._intentStates) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent.startsWith(\"oplist-\")) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this._annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    // #645 modified by ngx-extended-pdf-viewer\n    if (!this._tryCleanup(resetStats)) {\n      this.cleanupAfterRender = true;\n    }\n    return true;\n    // #645 end of modification\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this._annotationsPromise = null;\n    this._jsActionsPromise = null;\n    this._structTreePromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this._intentStates.get(intent);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(args.intent);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(new AbortException(reason?.message));\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [intent, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(intent);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor() {\n    this._listeners = [];\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (\n        typeof value === \"function\" ||\n        typeof value === \"symbol\" ||\n        value instanceof URL\n      ) {\n        throw new Error(\n          `LoopbackPort.postMessage - cannot clone: ${value?.toString()}`\n        );\n      }\n\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        if (transfers?.includes(buffer)) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      if (value instanceof Map) {\n        result = new Map();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const [key, val] of value) {\n          result.set(key, cloneValue(val));\n        }\n        return result;\n      }\n      if (value instanceof Set) {\n        result = new Set();\n        cloned.set(value, result); // Adding to cache now for cyclic references.\n        for (const val of value) {\n          result.add(cloneValue(val));\n        }\n        return result;\n      }\n      result = Array.isArray(value) ? [] : Object.create(null);\n      cloned.set(value, result); // Adding to cache now for cyclic references.\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (i === 'cMapUrl') {\n            result[i] = cloneValue(desc.value());\n          } else if (!value.hasOwnProperty?.(i)) {\n            continue;\n          }\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    const cloned = new WeakMap();\n    const event = { data: cloneValue(obj) };\n\n    this._deferred.then(() => {\n      for (const listener of this._listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {@link VerbosityLevel} should be used.\n */\n\n/** @type {any} */\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath = document.currentScript?.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      // modified by ngx-extended-pdf-viewer #376\n      if (GlobalWorkerOptions.workerSrc.constructor.name === \"Function\") {\n        return GlobalWorkerOptions.workerSrc();\n      }\n      // end of modification\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler = globalThis.pdfjsWorker?.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        const worker = await import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction that controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *   parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    if (!params.useWorkerFetch) {\n      // modified by ngx-extended-pdf-viewer #376\n\t  let cMapUrl = params.cMapUrl;\n\t  if (cMapUrl.constructor.name === \"Function\") {\n\t    cMapUrl = cMapUrl();\n\t  }\n      this.CMapReaderFactory = new params.CMapReaderFactory({\n        baseUrl: cMapUrl,\n        isCompressed: params.cMapPacked,\n      });\n      this.StandardFontDataFactory = new params.StandardFontDataFactory({\n        baseUrl: params.standardFontDataUrl,\n      });\n    }\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.pageCache) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    }\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this._hasJSActionsPromise = null;\n\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (!(reason instanceof Error)) {\n        const msg = \"DocException - expected a valid Error.\";\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ) {\n          unreachable(msg);\n        } else {\n          warn(msg);\n        }\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (params.pdfBug && globalThis.FontInspector?.enabled) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (imageData?.data?.length > MAX_IMAGE_SIZE_TO_STORE) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.CMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.CMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.StandardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.StandardFontDataFactory.fetch(data);\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument() {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        isPureXfa: !!this._htmlForXfa,\n        numPages: this._numPages,\n        annotationStorage: this.annotationStorage.serializable,\n        filename: this._fullReader?.filename ?? null,\n      })\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getFieldObjects() {\n    return this.messageHandler.sendWithPromise(\"GetFieldObjects\", null);\n  }\n\n  hasJSActions() {\n    return (this._hasJSActionsPromise ||= this.messageHandler.sendWithPromise(\n      \"HasJSActions\",\n      null\n    ));\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getDocJSActions() {\n    return this.messageHandler.sendWithPromise(\"GetDocJSActions\", null);\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n      const page = this.pageCache[i];\n      if (!page) {\n        continue;\n      }\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this._hasJSActionsPromise = null;\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj?.resolved || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._cancelBound = this.cancel.bind(this);\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    get completed() {\n      return this.capability.promise.catch(function () {\n        // Ignoring errors, since we only want to know when rendering is\n        // no longer pending.\n      });\n    }\n\n    initializeGraphics({ transparency = false, optionalContentConfig }) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (this._pdfBug && globalThis.StepperManager?.enabled) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const { canvasContext, viewport, transform, imageLayer, background } =\n        this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        imageLayer,\n        optionalContentConfig\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this._cancelBound);\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n    // For testing only.\n    styleElement = null,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ? styleElement\n        : null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m?.[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (const font of fonts) {\n        names.push(font.loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (const name of names) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = name;\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      this._onUnsupportedFeature({\n        featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n      });\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nlet NodeStandardFontDataFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeStandardFontDataFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  const fetchData = function (url) {\n    return new Promise((resolve, reject) => {\n      const fs = __non_webpack_require__(\"fs\");\n      fs.readFile(url, (error, data) => {\n        if (error || !data) {\n          reject(new Error(error));\n          return;\n        }\n        resolve(new Uint8Array(data));\n      });\n    });\n  };\n\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    _createCanvas(width, height) {\n      const Canvas = __non_webpack_require__(\"canvas\");\n      return Canvas.createCanvas(width, height);\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return fetchData(url).then(data => {\n        return { cMapData: data, compressionType };\n      });\n    }\n  };\n\n  NodeStandardFontDataFactory = class extends BaseStandardFontDataFactory {\n    _fetchData(url) {\n      return fetchData(url);\n    }\n  };\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  getValue(key, fieldname, defaultValue, radioButtonField = undefined) {\n    let obj = this._storage.get(key);\n    if (obj === undefined) {\n      if (window.getFormValue) {\n        window.assignFormIdAndFieldName(key, fieldname, radioButtonField);\n        // necessary because radio buttons don't have a reference to their field\n        const ngObj = window.getFormValue(fieldname);\n        if (ngObj !== undefined && ngObj.value !== undefined) {\n          if (radioButtonField) {\n            const value = { value: ngObj.value === radioButtonField };\n            obj = value;\n          } else {\n            obj = ngObj;\n          }\n          this.setValue(key, undefined, obj); // second parameter is undefined to prevent infinite loops\n        }\n        if (obj === undefined && defaultValue !== undefined && defaultValue.value !== undefined && defaultValue.value !== \"\") {\n          // send the pre-filled form value to Angular via (formDataChange)\n          if (radioButtonField) {\n            if (defaultValue.value) {\n              window.setFormValue(fieldname, radioButtonField);\n            }\n          } else {\n            window.setFormValue(fieldname, defaultValue.value);\n          }\n        }\n      }\n    }\n    // #718 end of modification by ngx-extended-pdf-viewer\n    return obj !== undefined ? obj : defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {string} fieldName name of the input field\n   * @param {Object} value\n   */\n  // #718 modified by ngx-extended-pdf-viewer\n  setValue(key, fieldname, value, radioButtonField = undefined) {\n    // #718 end of modification by ngx-extended-pdf-viewer\n    const obj = this._storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (\n          entry !== \"radioValue\" && // #718 modified by ngx-extended-pdf-viewer\n          entry !== \"emitMessage\" && // #718 modified by ngx-extended-pdf-viewer\n          obj[entry] !== val\n        ) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      this._storage.set(key, value);\n      modified = true;\n    }\n    if (modified) {\n      this._setModified();\n      // #718 modified by ngx-extended-pdf-viewer\n      if (fieldname || radioButtonField) {\n        if (window.setFormValue) {\n          if (value.items) {\n            window.setFormValue(fieldname, value.items);\n          } else if (value.emitMessage === false) {\n            // ignore this field\n          } else if (value.radioValue) {\n            window.setFormValue(fieldname, value.radioValue);\n          } else {\n            for (const val of Object.values(value)) {\n              window.setFormValue(fieldname, val);\n            }\n          }\n        }\n      }\n      // #718 end of modification by ngx-extended-pdf-viewer\n    }\n  }\n\n  getAll() {\n    return this._storage.size > 0 ? objectFromMap(this._storage) : null;\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this._storage.size > 0 ? this._storage : null;\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPattern, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\nconst COMPILE_TYPE3_GLYPHS = true;\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n// Because of https://bugs.chromium.org/p/chromium/issues/detail?id=1170396\n// some curves aren't rendered correctly.\n// Multiplying lineWidth by this factor should help to have \"correct\"\n// rendering with no artifacts.\n// Once the bug is fixed upstream, we can remove this constant and its use.\nconst LINEWIDTH_SCALE_FACTOR = 1.000001;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (ctx.mozCurrentTransform) {\n    return;\n  }\n  ctx._originalSave = ctx.save;\n  ctx._originalRestore = ctx.restore;\n  ctx._originalRotate = ctx.rotate;\n  ctx._originalScale = ctx.scale;\n  ctx._originalTranslate = ctx.translate;\n  ctx._originalTransform = ctx.transform;\n  ctx._originalSetTransform = ctx.setTransform;\n  ctx._originalResetTransform = ctx.resetTransform;\n\n  ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n  ctx._transformStack = [];\n\n  try {\n    // The call to getOwnPropertyDescriptor throws an exception in Node.js:\n    // \"TypeError: Method lineWidth called on incompatible receiver\n    //  #<CanvasRenderingContext2D>\".\n    const desc = Object.getOwnPropertyDescriptor(\n      Object.getPrototypeOf(ctx),\n      \"lineWidth\"\n    );\n\n    ctx._setLineWidth = desc.set;\n    ctx._getLineWidth = desc.get;\n\n    Object.defineProperty(ctx, \"lineWidth\", {\n      set: function setLineWidth(width) {\n        this._setLineWidth(width * LINEWIDTH_SCALE_FACTOR);\n      },\n      get: function getLineWidth() {\n        return this._getLineWidth();\n      },\n    });\n  } catch (_) {}\n\n  Object.defineProperty(ctx, \"mozCurrentTransform\", {\n    get: function getCurrentTransform() {\n      return this._transformMatrix;\n    },\n  });\n\n  Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n    get: function getCurrentTransformInverse() {\n      // Calculation done using WolframAlpha:\n      // http://www.wolframalpha.com/input/?\n      //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n      const [a, b, c, d, e, f] = this._transformMatrix;\n      const ad_bc = a * d - b * c;\n      const bc_ad = b * c - a * d;\n\n      return [\n        d / ad_bc,\n        b / bc_ad,\n        c / bc_ad,\n        a / ad_bc,\n        (d * e - c * f) / bc_ad,\n        (b * e - a * f) / ad_bc,\n      ];\n    },\n  });\n\n  ctx.save = function ctxSave() {\n    const old = this._transformMatrix;\n    this._transformStack.push(old);\n    this._transformMatrix = old.slice(0, 6);\n\n    this._originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    const prev = this._transformStack.pop();\n    if (prev) {\n      this._transformMatrix = prev;\n      this._originalRestore();\n    }\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    const m = this._transformMatrix;\n    m[4] = m[0] * x + m[2] * y + m[4];\n    m[5] = m[1] * x + m[3] * y + m[5];\n\n    this._originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    const m = this._transformMatrix;\n    m[0] *= x;\n    m[1] *= x;\n    m[2] *= y;\n    m[3] *= y;\n\n    this._originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * a + m[2] * b,\n      m[1] * a + m[3] * b,\n      m[0] * c + m[2] * d,\n      m[1] * c + m[3] * d,\n      m[0] * e + m[2] * f + m[4],\n      m[1] * e + m[3] * f + m[5],\n    ];\n\n    ctx._originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    this._transformMatrix = [a, b, c, d, e, f];\n\n    ctx._originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    this._transformMatrix = [1, 0, 0, 1, 0, 0];\n\n    ctx._originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    const cosValue = Math.cos(angle);\n    const sinValue = Math.sin(angle);\n\n    const m = this._transformMatrix;\n    this._transformMatrix = [\n      m[0] * cosValue + m[2] * sinValue,\n      m[1] * cosValue + m[3] * sinValue,\n      m[0] * -sinValue + m[2] * cosValue,\n      m[1] * -sinValue + m[3] * cosValue,\n      m[4],\n      m[5],\n    ];\n\n    this._originalRotate(angle);\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height, trackTransform) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n      // reset canvas transform for emulated mozCurrentTransform, if needed\n      canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    if (trackTransform) {\n      addContextCurrentTransform(canvasEntry.context);\n    }\n    return canvasEntry;\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction compileType3Glyph(imgData) {\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width = imgData.width,\n    height = imgData.height,\n    width1 = width + 1;\n  let i, ii, j, j0;\n  const points = new Uint8Array(width1 * (height + 1));\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  const data = new Uint8Array(lineSize * height);\n  let pos = 0;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    const elem = data0[i];\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    const coords = [p % width1, i];\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      const o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  clone() {\n    return Object.create(this);\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\n/**\n * @type {any}\n */\nconst CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  const EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  const EXECUTION_STEPS = 10;\n\n  function putBinaryImageData(ctx, imgData, transferMaps = null) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0,\n      destPos;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n    let i, j, thisChunkHeight, elemsInThisChunk;\n\n    let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n    if (transferMaps) {\n      switch (transferMaps.length) {\n        case 1:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[0];\n          transferMapBlue = transferMaps[0];\n          transferMapGray = transferMaps[0];\n          break;\n        case 4:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[1];\n          transferMapBlue = transferMaps[2];\n          transferMapGray = transferMaps[3];\n          break;\n      }\n    }\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      const srcLength = src.byteLength;\n      const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      const dest32DataLength = dest32.length;\n      const fullSrcDiff = (width + 7) >> 3;\n      let white = 0xffffffff;\n      let black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      if (transferMapGray) {\n        if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n          [white, black] = [black, white];\n        }\n      }\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          const srcDiff = srcLength - srcPos;\n          let k = 0;\n          const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          const kEndUnrolled = kEnd & ~7;\n          let mask = 0;\n          let srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < destPos; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    const height = imgData.height,\n      width = imgData.width;\n    const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    let srcPos = 0;\n    const src = imgData.data;\n    const dest = chunkImgData.data;\n\n    for (let i = 0; i < totalChunks; i++) {\n      const thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      let destPos = 3; // alpha component offset\n      for (let j = 0; j < thisChunkHeight; j++) {\n        let elem,\n          mask = 0;\n        for (let k = 0; k < width; k++) {\n          if (!mask) {\n            elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    const properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (let i = 0, ii = properties.length; i < ii; i++) {\n      const property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    const length = bytes.length;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        const alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    const scale = 1 / 255;\n    for (let i = 3; i < length; i += 4) {\n      const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    const length = maskData.length;\n    for (let i = 3; i < length; i += 4) {\n      const y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    const hasBackdrop = !!backdrop;\n    const r0 = hasBackdrop ? backdrop[0] : 0;\n    const g0 = hasBackdrop ? backdrop[1] : 0;\n    const b0 = hasBackdrop ? backdrop[2] : 0;\n\n    let composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    const PIXELS_TO_PROCESS = 1048576;\n    const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (let row = 0; row < height; row += chunkSize) {\n      const chunkHeight = Math.min(chunkSize, height - row);\n      const maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      const layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx) {\n    const mask = smask.canvas;\n    const maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      smask.backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  const NORMAL_CLIP = {};\n  const EO_CLIP = {};\n\n  // eslint-disable-next-line no-shadow\n  class CanvasGraphics {\n    constructor(\n      canvasCtx,\n      commonObjs,\n      objs,\n      canvasFactory,\n      imageLayer,\n      optionalContentConfig\n    ) {\n      this.ctx = canvasCtx;\n      this.current = new CanvasExtraState();\n      this.stateStack = [];\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n      this.res = null;\n      this.xobjs = null;\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.canvasFactory = canvasFactory;\n      this.imageLayer = imageLayer;\n      this.groupStack = [];\n      this.processingType3 = null;\n      // Patterns are painted relative to the initial page/form transform, see\n      // PDF spec 8.7.2 NOTE 1.\n      this.baseTransform = null;\n      this.baseTransformStack = [];\n      this.groupLevel = 0;\n      this.smaskStack = [];\n      this.smaskCounter = 0;\n      this.tempSMask = null;\n      this.contentVisible = true;\n      this.markedContentStack = [];\n      this.optionalContentConfig = optionalContentConfig;\n      this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n      this.cachedPatterns = new Map();\n      if (canvasCtx) {\n        // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n        // the transformation must already be set in canvasCtx._transformMatrix.\n        addContextCurrentTransform(canvasCtx);\n      }\n      this._cachedGetSinglePixelWidth = null;\n    }\n\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      const width = this.ctx.canvas.width;\n      const height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        const transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n      this._combinedScaleFactor = Math.hypot(\n        this.baseTransform[0],\n        this.baseTransform[2]\n      );\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    }\n\n    executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      let i = executionStartIdx || 0;\n      const argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      const chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      let steps = 0;\n\n      const commonObjs = this.commonObjs;\n      const objs = this.objs;\n      let fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    }\n\n    endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      while (this.stateStack.length || this.current.activeSMask !== null) {\n        this.restore();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.cachedPatterns.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    }\n\n    _scaleImage(img, inverseTransform) {\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      const width = img.width;\n      const height = img.height;\n      let widthScale = Math.max(\n        Math.hypot(inverseTransform[0], inverseTransform[1]),\n        1\n      );\n      let heightScale = Math.max(\n        Math.hypot(inverseTransform[2], inverseTransform[3]),\n        1\n      );\n\n      let paintWidth = width,\n        paintHeight = height;\n      let tmpCanvasId = \"prescale1\";\n      let tmpCanvas, tmpCtx;\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        let newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          img,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        img = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      return {\n        img,\n        paintWidth,\n        paintHeight,\n      };\n    }\n\n    _createMaskCanvas(img) {\n      const ctx = this.ctx;\n      const width = img.width,\n        height = img.height;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      putBinaryImageMask(maskCtx, img);\n\n      // Create the mask canvas at the size it will be drawn at and also set\n      // its transform to match the current transform so if there are any\n      // patterns applied they will be applied relative to the correct\n      // transform.\n      const objToCanvas = ctx.mozCurrentTransform;\n      let maskToCanvas = Util.transform(objToCanvas, [\n        1 / width,\n        0,\n        0,\n        -1 / height,\n        0,\n        0,\n      ]);\n      maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n      const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n      const cord2 = Util.applyTransform([width, height], maskToCanvas);\n      const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n      const drawnWidth = Math.ceil(rect[2] - rect[0]);\n      const drawnHeight = Math.ceil(rect[3] - rect[1]);\n      const fillCanvas = this.cachedCanvases.getCanvas(\n        \"fillCanvas\",\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      const fillCtx = fillCanvas.context;\n      // The offset will be the top-left cordinate mask.\n      const offsetX = Math.min(cord1[0], cord2[0]);\n      const offsetY = Math.min(cord1[1], cord2[1]);\n      fillCtx.translate(-offsetX, -offsetY);\n      fillCtx.transform.apply(fillCtx, maskToCanvas);\n      // Pre-scale if needed to improve image smoothing.\n      const scaled = this._scaleImage(\n        maskCanvas.canvas,\n        fillCtx.mozCurrentTransformInverse\n      );\n      fillCtx.drawImage(\n        scaled.img,\n        0,\n        0,\n        scaled.img.width,\n        scaled.img.height,\n        0,\n        0,\n        width,\n        height\n      );\n      fillCtx.globalCompositeOperation = \"source-in\";\n\n      const inverse = Util.transform(fillCtx.mozCurrentTransformInverse, [\n        1,\n        0,\n        0,\n        1,\n        -offsetX,\n        -offsetY,\n      ]);\n      fillCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(ctx, this, inverse, false)\n        : fillColor;\n\n      fillCtx.fillRect(0, 0, width, height);\n\n      // Round the offsets to avoid drawing fractional pixels.\n      return {\n        canvas: fillCanvas.canvas,\n        offsetX: Math.round(offsetX),\n        offsetY: Math.round(offsetY),\n      };\n    }\n\n    // Graphics state\n    setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    }\n\n    setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    }\n\n    setDash(dashArray, dashPhase) {\n      const ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (let i = 0, ii = states.length; i < ii; i++) {\n        const state = states[i];\n        const key = state[0];\n        const value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n          case \"TR\":\n            this.current.transferMaps = value;\n        }\n      }\n    }\n\n    beginSMaskGroup() {\n      const activeSMask = this.current.activeSMask;\n      const drawnWidth = activeSMask.canvas.width;\n      const drawnHeight = activeSMask.canvas.height;\n      const cacheId = \"smaskGroupAt\" + this.groupLevel;\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      const currentCtx = this.ctx;\n      const currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      const groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    }\n\n    suspendSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    }\n\n    resumeSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      const groupCtx = this.current.resumeSMaskCtx;\n      const currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    }\n\n    endSMaskGroup() {\n      const groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      const deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    }\n\n    save() {\n      this.ctx.save();\n      const old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    }\n\n    restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      } else {\n        // We've finished all the SMask groups, reflect that in our state.\n        this.current.activeSMask = null;\n      }\n    }\n\n    transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    }\n\n    // Path\n    constructPath(ops, args) {\n      const ctx = this.ctx;\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n\n            const xw = x + width;\n            const yh = y + height;\n            ctx.moveTo(x, y);\n            if (width === 0 || height === 0) {\n              ctx.lineTo(xw, yh);\n            } else {\n              ctx.lineTo(xw, y);\n              ctx.lineTo(xw, yh);\n              ctx.lineTo(x, yh);\n            }\n\n            ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    }\n\n    closePath() {\n      this.ctx.closePath();\n    }\n\n    stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (this.contentVisible) {\n        if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n          const lineWidth = this.getSinglePixelWidth();\n          ctx.save();\n          ctx.strokeStyle = strokeColor.getPattern(\n            ctx,\n            this,\n            ctx.mozCurrentTransformInverse\n          );\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          const lineWidth = this.getSinglePixelWidth();\n          if (lineWidth < 0 && -lineWidth >= this.current.lineWidth) {\n            // The current transform will transform a square pixel into a\n            // parallelogram where both heights are lower than 1 and not equal.\n            ctx.save();\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.stroke();\n            ctx.restore();\n          } else {\n            // Prevent drawing too thin lines by enforcing a minimum line width.\n            ctx.lineWidth = Math.max(lineWidth, this.current.lineWidth);\n            ctx.stroke();\n          }\n        }\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      const ctx = this.ctx;\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      let needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        ctx.fillStyle = fillColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse\n        );\n        needRestore = true;\n      }\n\n      if (this.contentVisible) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    }\n\n    eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    }\n\n    fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    }\n\n    eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    }\n\n    endPath() {\n      this.consumePath();\n    }\n\n    // Clipping\n    clip() {\n      this.pendingClip = NORMAL_CLIP;\n    }\n\n    eoClip() {\n      this.pendingClip = EO_CLIP;\n    }\n\n    // Text\n    beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    }\n\n    endText() {\n      const paths = this.pendingTextPaths;\n      const ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (let i = 0; i < paths.length; i++) {\n        const path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    }\n\n    setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    }\n\n    setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setFont(fontRefName, size) {\n      const fontObj = this.commonObjs.get(fontRefName);\n      const current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      const name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n      const typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    }\n\n    setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    }\n\n    setTextRise(rise) {\n      this.current.textRise = rise;\n    }\n\n    moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.hypot(a, b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    paintChar(character, x, y, patternTransform, resetLineWidthToOne) {\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const textRenderingMode = current.textRenderingMode;\n      const fontSize = current.fontSize / current.fontSizeScale;\n      const fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      const isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      let addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n          }\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          if (resetLineWidthToOne) {\n            ctx.save();\n            ctx.moveTo(x, y);\n            ctx.resetTransform();\n            ctx.lineWidth = Math.round(this._combinedScaleFactor);\n            ctx.strokeText(character, 0, 0);\n            ctx.restore();\n          } else {\n            ctx.strokeText(character, x, y);\n          }\n        }\n      }\n\n      if (isAddToPathSet) {\n        const paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    }\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      const data = ctx.getImageData(0, 0, 10, 10).data;\n      let enabled = false;\n      for (let i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      const ctx = this.ctx;\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const glyphsLength = glyphs.length;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      const simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(\n          ctx,\n          this,\n          ctx.mozCurrentTransformInverse\n        );\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      let lineWidth = current.lineWidth;\n      let resetLineWidthToOne = false;\n      const scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        const fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth();\n          resetLineWidthToOne = lineWidth < 0;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      let x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        const glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        let restoreNeeded = false;\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        const accent = glyph.accent;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          const vx =\n            -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          const measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            const characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(\n              character,\n              scaledX,\n              scaledY,\n              patternTransform,\n              resetLineWidthToOne\n            );\n            if (accent) {\n              const scaledAccentX =\n                scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n              const scaledAccentY =\n                scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform,\n                resetLineWidthToOne\n              );\n            }\n          }\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n      return undefined;\n    }\n\n    showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      const ctx = this.ctx;\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      const fontDirection = current.fontDirection;\n      const spacingDir = font.vertical ? 1 : -1;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const textHScale = current.textHScale * fontDirection;\n      const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      const glyphsLength = glyphs.length;\n      const isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      let i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        if (this.contentVisible) {\n          this.processingType3 = glyph;\n          this.save();\n          ctx.scale(fontSize, fontSize);\n          ctx.transform.apply(ctx, fontMatrix);\n          this.executeOperatorList(operatorList);\n          this.restore();\n        }\n\n        const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    }\n\n    // Type3 fonts\n    setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    }\n\n    setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    }\n\n    // Color\n    getColorN_Pattern(IR) {\n      let pattern;\n      if (IR[0] === \"TilingPattern\") {\n        const color = IR[1];\n        const baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        const canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = this._getPattern(IR[1]);\n      }\n      return pattern;\n    }\n\n    setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    }\n\n    setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    }\n\n    setFillRGBColor(r, g, b) {\n      const color = Util.makeHexColor(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    }\n\n    _getPattern(objId) {\n      if (this.cachedPatterns.has(objId)) {\n        return this.cachedPatterns.get(objId);\n      }\n      const pattern = getShadingPattern(this.objs.get(objId));\n      this.cachedPatterns.set(objId, pattern);\n      return pattern;\n    }\n\n    shadingFill(objId) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      this.save();\n      const pattern = this._getPattern(objId);\n      ctx.fillStyle = pattern.getPattern(\n        ctx,\n        this,\n        ctx.mozCurrentTransformInverse,\n        true\n      );\n\n      const inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        const canvas = ctx.canvas;\n        const width = canvas.width;\n        const height = canvas.height;\n\n        const bl = Util.applyTransform([0, 0], inv);\n        const br = Util.applyTransform([0, height], inv);\n        const ul = Util.applyTransform([width, 0], inv);\n        const ur = Util.applyTransform([width, height], inv);\n\n        const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    }\n\n    // Images\n    beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    }\n\n    beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    }\n\n    beginGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n\n      this.save();\n      const currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      const currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      let bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      const canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      const offsetX = Math.floor(bounds[0]);\n      const offsetY = Math.floor(bounds[1]);\n      let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      let scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      let cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      const scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      const groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Resetting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    }\n\n    endGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.groupLevel--;\n      const groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    }\n\n    beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    }\n\n    endAnnotations() {\n      this.restore();\n    }\n\n    beginAnnotation(id, rect, transform, matrix) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        const width = rect[2] - rect[0];\n        const height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    }\n\n    endAnnotation() {\n      this.restore();\n    }\n\n    paintImageMaskXObject(img) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const width = img.width,\n        height = img.height;\n\n      const glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph?.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n      const mask = this._createMaskCanvas(img);\n      const maskCanvas = mask.canvas;\n\n      ctx.save();\n      // The mask is drawn with the transform applied. Reset the current\n      // transform to draw to the identity.\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n      ctx.restore();\n    }\n\n    paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      skewX = 0,\n      skewY = 0,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      ctx.save();\n      const currentTransform = ctx.mozCurrentTransform;\n      ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n      const mask = this._createMaskCanvas(imgData);\n\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        const trans = Util.transform(currentTransform, [\n          scaleX,\n          skewX,\n          skewY,\n          scaleY,\n          positions[i],\n          positions[i + 1],\n        ]);\n\n        const [x, y] = Util.applyTransform([0, 0], trans);\n        ctx.drawImage(mask.canvas, x, y);\n      }\n      ctx.restore();\n    }\n\n    paintImageMaskXObjectGroup(images) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n\n      const fillColor = this.current.fillColor;\n      const isPatternFill = this.current.patternFill;\n      for (let i = 0, ii = images.length; i < ii; i++) {\n        const image = images[i];\n        const width = image.width,\n          height = image.height;\n\n        const maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        const maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(\n              maskCtx,\n              this,\n              ctx.mozCurrentTransformInverse,\n              false\n            )\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    }\n\n    paintImageXObject(objId) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      const width = imgData.width;\n      const height = imgData.height;\n      const map = [];\n      for (let i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    }\n\n    paintInlineImageXObject(imgData) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const width = imgData.width;\n      const height = imgData.height;\n      const ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      let imgToPaint;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        const tmpCanvas = this.cachedCanvases.getCanvas(\n          \"inlineImage\",\n          width,\n          height\n        );\n        const tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      const scaled = this._scaleImage(\n        imgToPaint,\n        ctx.mozCurrentTransformInverse\n      );\n      ctx.drawImage(\n        scaled.img,\n        0,\n        0,\n        scaled.paintWidth,\n        scaled.paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        const position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / ctx.mozCurrentTransformInverse[0],\n          height: height / ctx.mozCurrentTransformInverse[3],\n        });\n      }\n      this.restore();\n    }\n\n    paintInlineImageXObjectGroup(imgData, map) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const ctx = this.ctx;\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n      for (let i = 0, ii = map.length; i < ii; i++) {\n        const entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          const position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    }\n\n    paintSolidColorImageMask() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.ctx.fillRect(0, 0, 1, 1);\n    }\n\n    // Marked content\n\n    markPoint(tag) {\n      // TODO Marked content.\n    }\n\n    markPointProps(tag, properties) {\n      // TODO Marked content.\n    }\n\n    beginMarkedContent(tag) {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n\n    beginMarkedContentProps(tag, properties) {\n      if (tag === \"OC\") {\n        this.markedContentStack.push({\n          visible: this.optionalContentConfig.isVisible(properties),\n        });\n      } else {\n        this.markedContentStack.push({\n          visible: true,\n        });\n      }\n      this.contentVisible = this.isContentVisible();\n    }\n\n    endMarkedContent() {\n      this.markedContentStack.pop();\n      this.contentVisible = this.isContentVisible();\n    }\n\n    // Compatibility\n\n    beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    }\n\n    endCompat() {\n      // TODO stop ignoring undefined operators\n    }\n\n    // Helper functions\n\n    consumePath() {\n      const ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    }\n\n    getSinglePixelWidth() {\n      if (this._cachedGetSinglePixelWidth === null) {\n        // If transform is [a b] then a pixel (square) is transformed\n        //                 [c d]\n        // into a parallelogram: its area is the abs value of the determinant.\n        // This parallelogram has 2 heights:\n        //  - Area / |col_1|;\n        //  - Area / |col_2|.\n        // so in order to get a height of at least 1, pixel height\n        // must be computed as followed:\n        //  h = max(sqrt(a² + c²) / |det(M)|, sqrt(b² + d²) / |det(M)|).\n        // This is equivalent to:\n        //  h = max(|line_1_inv(M)|, |line_2_inv(M)|)\n        const m = this.ctx.mozCurrentTransform;\n\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const sqNorm1 = m[0] ** 2 + m[2] ** 2;\n        const sqNorm2 = m[1] ** 2 + m[3] ** 2;\n        const pixelHeight = Math.sqrt(Math.max(sqNorm1, sqNorm2)) / absDet;\n        if (\n          sqNorm1 !== sqNorm2 &&\n          this._combinedScaleFactor * pixelHeight > 1\n        ) {\n          // The parallelogram isn't a square and at least one height\n          // is lower than 1 so the resulting line width must be 1\n          // but it cannot be achieved with one scale: when scaling a pixel\n          // we'll get a rectangle (see issue #12295).\n          // For example with matrix [0.001 0, 0, 100], a pixel is transformed\n          // in a rectangle 0.001x100. If we just scale by 1000 (to have a 1)\n          // then we'll get a rectangle 1x1e5 which is wrong.\n          // In this case, we must reset the transform, set linewidth to 1\n          // and then stroke.\n          this._cachedGetSinglePixelWidth = -(\n            this._combinedScaleFactor * pixelHeight\n          );\n        } else if (absDet > Number.EPSILON) {\n          this._cachedGetSinglePixelWidth = pixelHeight;\n        } else {\n          // Matrix is non-invertible.\n          this._cachedGetSinglePixelWidth = 1;\n        }\n      }\n\n      return this._cachedGetSinglePixelWidth;\n    }\n\n    getCanvasPosition(x, y) {\n      const transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    }\n\n    isContentVisible() {\n      for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n        if (!this.markedContentStack[i].visible) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  for (const op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FormatError,\n  info,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this._matrix = IR[8];\n    this._patternCache = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    let pattern;\n    if (this._patternCache) {\n      pattern = this._patternCache;\n    } else {\n      if (!shadingFill) {\n        const tmpCanvas = owner.cachedCanvases.getCanvas(\n          \"pattern\",\n          owner.ctx.canvas.width,\n          owner.ctx.canvas.height,\n          true\n        );\n\n        const tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n        tmpCtx.beginPath();\n        tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n\n        tmpCtx.setTransform.apply(tmpCtx, owner.baseTransform);\n        if (this._matrix) {\n          tmpCtx.transform.apply(tmpCtx, this._matrix);\n        }\n        applyBoundingBox(tmpCtx, this._bbox);\n\n        tmpCtx.fillStyle = this._createGradient(tmpCtx);\n        tmpCtx.fill();\n\n        pattern = ctx.createPattern(tmpCanvas.canvas, \"repeat\");\n      } else {\n        applyBoundingBox(ctx, this._bbox);\n        pattern = this._createGradient(ctx);\n      }\n      this._patternCache = pattern;\n    }\n    if (!shadingFill) {\n      const domMatrix = new DOMMatrix(inverse);\n      try {\n        pattern.setTransform(domMatrix);\n      } catch (ex) {\n        // Avoid rendering breaking completely in Firefox 78 ESR,\n        // and in Node.js (see issue 13724).\n        warn(`RadialAxialShadingPattern.getPattern: \"${ex?.message}\".`);\n      }\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else {\n        k = (y1 - y) / (y1 - y2);\n      }\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._matrix = IR[6];\n    this._bbox = IR[7];\n    this._background = IR[8];\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (shadingFill) {\n      scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this._matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this._matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      shadingFill ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (!shadingFill) {\n      ctx.setTransform.apply(ctx, owner.baseTransform);\n      if (this._matrix) {\n        ctx.transform.apply(ctx, this._matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static get MAX_PATTERN_SIZE() {\n    return shadow(this, \"MAX_PATTERN_SIZE\", 3000);\n  }\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 cordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = graphics.ctx.mozCurrentTransform.slice();\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, shadingFill = false) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (!shadingFill) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    try {\n      pattern.setTransform(domMatrix);\n    } catch (ex) {\n      // Avoid rendering breaking completely in Firefox 78 ESR,\n      // and in Node.js (see issue 13724).\n      warn(`TilingPattern.getPattern: \"${ex?.message}\".`);\n    }\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* eslint-disable prettier/prettier */\n/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        ).catch((reason) => {\n          console.log(\"Caught an error of the worker thread: \" + reason);\n        });\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  constructor({ parsedData, rawData }) {\n    this._metadataMap = parsedData;\n    this._data = rawData;\n  }\n\n  getRaw() {\n    return this._data;\n  }\n\n  get(name) {\n    return this._metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { objectFromMap, warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  _evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this._evaluateVisibilityExpression(element);\n      } else if (this._groups.has(element)) {\n        state = this._groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this._evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    return this._groups.size > 0 ? objectFromMap(this._groups) : null;\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n    this._contentDispositionFilename =\n      params.contentDispositionFilename || null;\n\n    const initialData = params.initialData;\n    if (initialData?.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader?.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader?.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  assert,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [mouseState]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._mouseState = parameters.mouseState;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this.quadrilaterals = this._createQuadrilaterals(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `${-rect[0]}px ${-rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width -= 2 * data.borderStyle.width;\n        height -= 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeHexColor(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _createQuadrilaterals(ignoreBorder = false) {\n    if (!this.data.quadPoints) {\n      return null;\n    }\n\n    const quadrilaterals = [];\n    const savedRect = this.data.rect;\n    for (const quadPoint of this.data.quadPoints) {\n      this.data.rect = [\n        quadPoint[2].x,\n        quadPoint[2].y,\n        quadPoint[1].x,\n        quadPoint[1].y,\n      ];\n      quadrilaterals.push(this._createContainer(ignoreBorder));\n    }\n    this.data.rect = savedRect;\n    return quadrilaterals;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(trigger, data) {\n    let container = this.container;\n    if (this.quadrilaterals) {\n      trigger = trigger || this.quadrilaterals;\n      container = this.quadrilaterals[0];\n    }\n\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the quadrilaterals of the annotation.\n   *\n   * @private\n   * @param {string} className\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLSectionElement>}\n   */\n  _renderQuadrilaterals(className) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(this.quadrilaterals, \"Missing quadrilaterals during rendering\");\n    }\n\n    for (const quadrilateral of this.quadrilaterals) {\n      quadrilateral.className = className;\n    }\n    return this.quadrilaterals;\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement|Array<HTMLSectionElement>}\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action ||\n      parameters.data.isTooltipOnly ||\n      (parameters.data.actions &&\n        (parameters.data.actions.Action ||\n          parameters.data.actions[\"Mouse Up\"] ||\n          parameters.data.actions[\"Mouse Down\"]))\n    );\n    super(parameters, { isRenderable, createQuadrilaterals: true });\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n    } else if (\n      data.actions &&\n      (data.actions.Action ||\n        data.actions[\"Mouse Up\"] ||\n        data.actions[\"Mouse Down\"]) &&\n      this.enableScripting &&\n      this.hasJSActions\n    ) {\n      this._bindJSAction(link, data);\n    } else {\n      this._bindLink(link, \"\");\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"linkAnnotation\").map(\n        (quadrilateral, index) => {\n          const linkElement = index === 0 ? link : link.cloneNode();\n          quadrilateral.appendChild(linkElement);\n          return quadrilateral;\n        }\n      );\n    }\n\n    this.container.className = \"linkAnnotation\";\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  _getKeyModifier(event) {\n    return (\n      (navigator.platform.includes(\"Win\") && event.ctrlKey) ||\n      (navigator.platform.includes(\"Mac\") && event.metaKey)\n    );\n  }\n\n  _setEventListener(element, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non mouse event\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: event.target.checked,\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        this._setEventListener(element, baseName, eventName, getter);\n      }\n    }\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      event.target.style[styleName] = ColorConverters[`${color[0]}_HTML`](\n        color.slice(1)\n      );\n    };\n\n    const commonActions = {\n      display: event => {\n        const hidden = event.detail.display % 2 === 1;\n        event.target.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden,\n          print: event.detail.display === 0 || event.detail.display === 3,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          print: event.detail.print,\n        });\n      },\n      hidden: event => {\n        event.target.style.visibility = event.detail.hidden\n          ? \"hidden\"\n          : \"visible\";\n        this.annotationStorage.setValue(this.data.id, this.data.fieldName, { // #868 modified by ngx-extended-pdf-viewer\n          hidden: event.detail.hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        if (event.detail.readonly) {\n          event.target.setAttribute(\"readonly\", \"\");\n        } else {\n          event.target.removeAttribute(\"readonly\");\n        }\n      },\n      required: event => {\n        if (event.detail.required) {\n          event.target.setAttribute(\"required\", \"\");\n        } else {\n          event.target.removeAttribute(\"required\");\n        }\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n    };\n\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      if (action) {\n        action(jsEvent);\n      }\n    }\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of document.getElementsByName(base.name)) {\n      if (element !== base) {\n        element[key] = value;\n        const data = Object.create(null);\n        data[keyInStorage] = value;\n        storage.setValue(element.getAttribute(\"id\"), this.data.fieldName, data); // #868 modified by ngx-extended-pdf-viewer\n      }\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: this.data.fieldValue,\n        valueAsString: this.data.fieldValue,\n      });\n      const textContent = storedData.valueAsString || storedData.value || \"\";\n      const elementData = {\n        userValue: null,\n        formattedValue: null,\n        beforeInputSelectionRange: null,\n        beforeInputValue: null,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n\n      elementData.userValue = textContent;\n      element.setAttribute(\"id\", id);\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: event.target.value,\n        });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n      });\n\n      let blurListener = event => {\n        if (elementData.formattedValue) {\n          event.target.value = elementData.formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n        elementData.beforeInputSelectionRange = null;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.userValue) {\n            event.target.value = elementData.userValue;\n          }\n        });\n\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value || \"\";\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                value: elementData.userValue.toString(),\n              });\n              if (!elementData.formattedValue) {\n                event.target.value = elementData.userValue;\n              }\n            },\n            valueAsString(event) {\n              elementData.formattedValue = event.detail.valueAsString || \"\";\n              if (event.target !== document.activeElement) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = elementData.formattedValue;\n              }\n              storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                formattedValue: elementData.formattedValue,\n              });\n            },\n            selRange(event) {\n              const [selStart, selEnd] = event.detail.selRange;\n              if (selStart >= 0 && selEnd < event.target.value.length) {\n                event.target.setSelectionRange(selStart, selEnd);\n              }\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          // if the key is one of Escape, Enter or Tab\n          // then the data are committed\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\") {\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          // Save the entered value\n          elementData.userValue = event.target.value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value: event.target.value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (this._mouseState.isDown) {\n            // Focus out using the mouse: data are committed\n            elementData.userValue = event.target.value;\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: event.target.value,\n                willCommit: true,\n                commitKey: 1,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n        element.addEventListener(\"mousedown\", event => {\n          elementData.beforeInputValue = event.target.value;\n          elementData.beforeInputSelectionRange = null;\n        });\n        element.addEventListener(\"keyup\", event => {\n          // keyup is triggered after input\n          if (event.target.selectionStart === event.target.selectionEnd) {\n            elementData.beforeInputSelectionRange = null;\n          }\n        });\n        element.addEventListener(\"select\", event => {\n          elementData.beforeInputSelectionRange = [\n            event.target.selectionStart,\n            event.target.selectionEnd,\n          ];\n        });\n\n        if (this.data.actions?.Keystroke) {\n          // We should use beforeinput but this\n          // event isn't available in Firefox\n          element.addEventListener(\"input\", event => {\n            let selStart = -1;\n            let selEnd = -1;\n            if (elementData.beforeInputSelectionRange) {\n              [selStart, selEnd] = elementData.beforeInputSelectionRange;\n            }\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value: elementData.beforeInputValue,\n                change: event.data,\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontSize, fontColor } = this.data.defaultAppearanceData;\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n    if (fontSize) {\n      style.fontSize = `${fontSize}px`;\n    }\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value:\n        data.fieldValue &&\n        ((data.exportValue && data.exportValue === data.fieldValue) ||\n          (!data.exportValue && data.fieldValue !== \"Off\")),\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, this.data.fieldName, { value }); // #868 modified by ngx-extended-pdf-viewer\n    }\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", event => { // #718 modified by ngx-extended-pdf-viewer\n      const name = event.target.name;\n      for (const checkbox of document.getElementsByName(name)) {\n        if (checkbox !== event.target) {\n          checkbox.checked = false;\n          storage.setValue(\n            checkbox.parentNode.getAttribute(\"data-annotation-id\"),\n            this.data.fieldName, // #718 modified by ngx-extended-pdf-viewer\n            { value: false }\n          );\n        }\n      }\n      storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n        value: event.target.checked,\n      });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: event.target.checked\n            });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(\n      id,\n      this.data.fieldName,\n      {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: data.fieldValue === data.buttonValue,\n      },\n      this.data.buttonValue // #718 modified by ngx-extended-pdf-viewer\n    ).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, this.data.fieldName, { value }, this.data.buttonValue);  // #718 modified by ngx-extended-pdf-viewer\n    }\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"id\", id);\n\n    element.addEventListener(\"change\", event => { // #718 modified by ngx-extended-pdf-viewer\n      const { target } = event;\n      for (const radio of document.getElementsByName(target.name)) {\n        if (radio !== target) {\n          if (window.setFormValue) { // #718 modified by ngx-extended-pdf-viewer\n            window.setFormValue(radio.getAttribute(\"id\"), false); // #718 modified by ngx-extended-pdf-viewer\n          } // #718 modified by ngx-extended-pdf-viewer\n          storage.setValue(radio.getAttribute(\"id\"), this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n            value: false,\n            emitMessage: false, // #718 modified by ngx-extended-pdf-viewer\n          });\n        }\n      }\n      storage.setValue(id, this.data.fieldName, {\n        // #718 modified by ngx-extended-pdf-viewer\n        value: target.checked,\n        radioValue: this.data.buttonValue, // #718 modified by ngx-extended-pdf-viewer\n      });\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value(event) {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of document.getElementsByName(event.target.name)) {\n              const radioId = radio.getAttribute(\"id\");\n              radio.checked = radioId === id && checked;\n              storage.setValue(radioId, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n                value: radio.checked,\n              });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderInteractiveForms });\n  }\n\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getValue`\n    // is used and the full array of field values is stored.\n    const value = storage.getValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n      value: this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : undefined,\n    }).value; // #718 modified by ngx-extended-pdf-viewer\n\n    this.data.fieldValue = value; // #718 modified by ngx-extended-pdf-viewer\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n    selectElement.setAttribute(\"id\", id);\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    const getValue = (event, isExport) => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const options = event.target.options;\n      if (!event.target.multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const fieldName = this.data.fieldName; // #868 modified by ngx-extended-pdf-viewer\n        const actions = {\n          value(event) {\n            const options = selectElement.options;\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            Array.prototype.forEach.call(options, option => {\n              option.selected = values.has(option.value);\n            });\n            storage.setValue(id, fieldName, { // #718 / #868 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: null,\n              items: [],\n            });\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n            selectElement.insertBefore(\n              optionElement,\n              selectElement.children[index]\n            );\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.appendChild(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n              items: getItems(event),\n            });\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            const options = event.target.options;\n            Array.prototype.forEach.call(options, (option, i) => {\n              option.selected = indices.has(i);\n            });\n            storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n              value: getValue(event, /* isExport */ true),\n            });\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(event, /* isExport */ true);\n        const value = getValue(event, /* isExport */ false);\n        storage.setValue(id, this.data.fieldName, { value: exportValue }); // #718 modified by ngx-extended-pdf-viewer\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value,\n            changeEx: exportValue,\n            willCommit: true,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n        ],\n        event => event.target.checked\n      );\n    } else {\n      selectElement.addEventListener(\"input\", event => { // #718 modified by ngx-extended-pdf-viewer\n        storage.setValue(id, this.data.fieldName, { // #718 modified by ngx-extended-pdf-viewer\n          value: getValue(event),\n          radioValue: getValue(event, true), // #718 modified by ngx-extended-pdf-viewer\n        });\n      });\n    }\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, { isRenderable });\n  }\n\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElements = this.layer.querySelectorAll(selector);\n    if (parentElements.length === 0) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: Array.from(parentElements),\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const page = this.page;\n    const rect = Util.normalizeRect([\n      this.data.parentRect[0],\n      page.view[3] - this.data.parentRect[1] + page.view[1],\n      this.data.parentRect[2],\n      page.view[3] - this.data.parentRect[3] + page.view[1],\n    ]);\n    const popupLeft =\n      rect[0] + this.data.parentRect[2] - this.data.parentRect[0];\n    const popupTop = rect[1];\n\n    this.container.style.transformOrigin = `${-popupLeft}px ${-popupTop}px`;\n    this.container.style.left = `${popupLeft}px`;\n    this.container.style.top = `${popupTop}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.hidden = true;\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeHexColor(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    if (!Array.isArray(this.trigger)) {\n      this.trigger = [this.trigger];\n    }\n\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this._toggle.bind(this));\n      element.addEventListener(\"mouseover\", this._show.bind(this, false));\n      element.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    }\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hidden) {\n      this.hideElement.hidden = false;\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hidden && !this.pinned) {\n      this.hideElement.hidden = true;\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"highlightAnnotation\");\n    }\n\n    this.container.className = \"highlightAnnotation\";\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"underlineAnnotation\");\n    }\n\n    this.container.className = \"underlineAnnotation\";\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"squigglyAnnotation\");\n    }\n\n    this.container.className = \"squigglyAnnotation\";\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, {\n      isRenderable,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n\n    if (this.quadrilaterals) {\n      return this._renderQuadrilaterals(\"strikeoutAnnotation\");\n    }\n\n    this.container.className = \"strikeoutAnnotation\";\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, { isRenderable, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      id: stringToPDFString(filename),\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms: parameters.renderInteractiveForms !== false,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n        enableScripting: parameters.enableScripting,\n        hasJSActions: parameters.hasJSActions,\n        mouseState: parameters.mouseState || { isDown: false },\n      });\n      if (element.isRenderable) {\n        const rendered = element.render();\n        if (data.hidden) {\n          rendered.style.visibility = \"hidden\";\n        }\n        if (Array.isArray(rendered)) {\n          for (const renderedElement of rendered) {\n            parameters.div.appendChild(renderedElement);\n          }\n        } else {\n          if (element instanceof PopupAnnotationElement) {\n            // Popup annotation elements should not be on top of other\n            // annotation elements to prevent interfering with mouse events.\n            parameters.div.prepend(rendered);\n          } else {\n            parameters.div.appendChild(rendered);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    for (const data of parameters.annotations) {\n      const elements = parameters.div.querySelectorAll(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (elements) {\n        for (const element of elements) {\n          element.style.transform = transform;\n        }\n      }\n    }\n    parameters.div.hidden = false;\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_HTML([r, g, b]) {\n    const R = makeColorComp(r);\n    const G = makeColorComp(g);\n    const B = makeColorComp(b);\n    return `#${R}${G}${B}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    return this.RGB_HTML(this.CMYK_RGB(components));\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\nconst AllWhitespaceRegexp = /^\\s+$/g;\n\nfunction getAscent(fontFamily, ctx) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  ctx.save();\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n    let ascent = metrics?.fontBoundingBoxAscent; // #707 modified by ngx-extended-pdf-viewer\n    let descent = Math.abs(metrics?.fontBoundingBoxDescent); // #707 modified by ngx-extended-pdf-viewer\n  if (ascent) {\n    ctx.restore();\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.restore();\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles, ctx) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    originalTransform: null,\n    paddingBottom: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n    paddingTop: 0,\n    scale: 1,\n  };\n\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._viewport.transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent = fontHeight * getAscent(style.fontFamily, ctx);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  textDiv.style.left = `${left}px`;\n  textDiv.style.top = `${top}px`;\n  textDiv.style.fontSize = `${fontHeight}px`;\n  textDiv.style.fontFamily = style.fontFamily;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (\n    geom.str.length > 1 ||\n    (task._enhanceTextSelection && AllWhitespaceRegexp.test(geom.str))\n  ) {\n    shouldScaleText = true;\n  } else if (geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    if (style.vertical) {\n      textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n    } else {\n      textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n    }\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._textContentStream) {\n    task._layoutText(textDiv);\n  }\n\n  if (task._enhanceTextSelection && textDivProperties.hasText) {\n    let angleCos = 1,\n      angleSin = 0;\n    if (angle !== 0) {\n      angleCos = Math.cos(angle);\n      angleSin = Math.sin(angle);\n    }\n    const divWidth =\n      (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n    const divHeight = fontHeight;\n\n    let m, b;\n    if (angle !== 0) {\n      m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n      b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n    } else {\n      b = [left, top, left + divWidth, top + divHeight];\n    }\n\n    task._bounds.push({\n      left: b[0],\n      top: b[1],\n      right: b[2],\n      bottom: b[3],\n      div: textDiv,\n      size: [divWidth, divHeight],\n      m,\n    });\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    task._renderingDone = true;\n    capability.resolve();\n    return;\n  }\n\n  if (!task._textContentStream) {\n    for (let i = 0; i < textDivsLength; i++) {\n      task._layoutText(textDivs[i]);\n    }\n  }\n\n  task._renderingDone = true;\n  capability.resolve();\n}\n\nfunction findPositiveMin(ts, offset, count) {\n  let result = 0;\n  for (let i = 0; i < count; i++) {\n    const t = ts[offset++];\n    if (t > 0) {\n      result = result ? Math.min(t, result) : t;\n    }\n  }\n  return result;\n}\n\nfunction expand(task) {\n  const bounds = task._bounds;\n  const viewport = task._viewport;\n\n  const expanded = expandBounds(viewport.width, viewport.height, bounds);\n  for (let i = 0; i < expanded.length; i++) {\n    const div = bounds[i].div;\n    const divProperties = task._textDivProperties.get(div);\n    if (divProperties.angle === 0) {\n      divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n      divProperties.paddingTop = bounds[i].top - expanded[i].top;\n      divProperties.paddingRight = expanded[i].right - bounds[i].right;\n      divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n      task._textDivProperties.set(div, divProperties);\n      continue;\n    }\n    // Box is rotated -- trying to find padding so rotated div will not\n    // exceed its expanded bounds.\n    const e = expanded[i],\n      b = bounds[i];\n    const m = b.m,\n      c = m[0],\n      s = m[1];\n    // Finding intersections with expanded box.\n    const points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n    const ts = new Float64Array(64);\n    for (let j = 0, jj = points.length; j < jj; j++) {\n      const t = Util.applyTransform(points[j], m);\n      ts[j + 0] = c && (e.left - t[0]) / c;\n      ts[j + 4] = s && (e.top - t[1]) / s;\n      ts[j + 8] = c && (e.right - t[0]) / c;\n      ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n      ts[j + 16] = s && (e.left - t[0]) / -s;\n      ts[j + 20] = c && (e.top - t[1]) / c;\n      ts[j + 24] = s && (e.right - t[0]) / -s;\n      ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n      ts[j + 32] = c && (e.left - t[0]) / -c;\n      ts[j + 36] = s && (e.top - t[1]) / -s;\n      ts[j + 40] = c && (e.right - t[0]) / -c;\n      ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n      ts[j + 48] = s && (e.left - t[0]) / s;\n      ts[j + 52] = c && (e.top - t[1]) / -c;\n      ts[j + 56] = s && (e.right - t[0]) / s;\n      ts[j + 60] = c && (e.bottom - t[1]) / -c;\n    }\n    // Not based on math, but to simplify calculations, using cos and sin\n    // absolute values to not exceed the box (it can but insignificantly).\n    const boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n    divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n    divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n    divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n    divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n    task._textDivProperties.set(div, divProperties);\n  }\n}\n\nfunction expandBounds(width, height, boxes) {\n  const bounds = boxes.map(function (box, i) {\n    return {\n      x1: box.left,\n      y1: box.top,\n      x2: box.right,\n      y2: box.bottom,\n      index: i,\n      x1New: undefined,\n      x2New: undefined,\n    };\n  });\n  expandBoundsLTR(width, bounds);\n\n  const expanded = new Array(boxes.length);\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i] = {\n      left: b.x1New,\n      top: 0,\n      right: b.x2New,\n      bottom: 0,\n    };\n  }\n\n  // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n  // array and objects.\n  boxes.map(function (box, i) {\n    const e = expanded[i],\n      b = bounds[i];\n    b.x1 = box.top;\n    b.y1 = width - e.right;\n    b.x2 = box.bottom;\n    b.y2 = width - e.left;\n    b.index = i;\n    b.x1New = undefined;\n    b.x2New = undefined;\n  });\n  expandBoundsLTR(height, bounds);\n\n  for (const b of bounds) {\n    const i = b.index;\n    expanded[i].top = b.x1New;\n    expanded[i].bottom = b.x2New;\n  }\n  return expanded;\n}\n\nfunction expandBoundsLTR(width, bounds) {\n  // Sorting by x1 coordinate and walk by the bounds in the same order.\n  bounds.sort(function (a, b) {\n    return a.x1 - b.x1 || a.index - b.index;\n  });\n\n  // First we see on the horizon is a fake boundary.\n  const fakeBoundary = {\n    x1: -Infinity,\n    y1: -Infinity,\n    x2: 0,\n    y2: Infinity,\n    index: -1,\n    x1New: 0,\n    x2New: 0,\n  };\n  const horizon = [\n    {\n      start: -Infinity,\n      end: Infinity,\n      boundary: fakeBoundary,\n    },\n  ];\n\n  for (const boundary of bounds) {\n    // Searching for the affected part of horizon.\n    // TODO red-black tree or simple binary search\n    let i = 0;\n    while (i < horizon.length && horizon[i].end <= boundary.y1) {\n      i++;\n    }\n    let j = horizon.length - 1;\n    while (j >= 0 && horizon[j].start >= boundary.y2) {\n      j--;\n    }\n\n    let horizonPart, affectedBoundary;\n    let q,\n      k,\n      maxXNew = -Infinity;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      let xNew;\n      if (affectedBoundary.x2 > boundary.x1) {\n        // In the middle of the previous element, new x shall be at the\n        // boundary start. Extending if further if the affected boundary\n        // placed on top of the current one.\n        xNew =\n          affectedBoundary.index > boundary.index\n            ? affectedBoundary.x1New\n            : boundary.x1;\n      } else if (affectedBoundary.x2New === undefined) {\n        // We have some space in between, new x in middle will be a fair\n        // choice.\n        xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n      } else {\n        // Affected boundary has x2new set, using it as new x.\n        xNew = affectedBoundary.x2New;\n      }\n      if (xNew > maxXNew) {\n        maxXNew = xNew;\n      }\n    }\n\n    // Set new x1 for current boundary.\n    boundary.x1New = maxXNew;\n\n    // Adjusts new x2 for the affected boundaries.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        // Was not set yet, choosing new x if possible.\n        if (affectedBoundary.x2 > boundary.x1) {\n          // Current and affected boundaries intersect. If affected boundary\n          // is placed on top of the current, shrinking the affected.\n          if (affectedBoundary.index > boundary.index) {\n            affectedBoundary.x2New = affectedBoundary.x2;\n          }\n        } else {\n          affectedBoundary.x2New = maxXNew;\n        }\n      } else if (affectedBoundary.x2New > maxXNew) {\n        // Affected boundary is touching new x, pushing it back.\n        affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n      }\n    }\n\n    // Fixing the horizon.\n    const changedHorizon = [];\n    let lastBoundary = null;\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      // Checking which boundary will be visible.\n      const useBoundary =\n        affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n      if (lastBoundary === useBoundary) {\n        // Merging with previous.\n        changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n      } else {\n        changedHorizon.push({\n          start: horizonPart.start,\n          end: horizonPart.end,\n          boundary: useBoundary,\n        });\n        lastBoundary = useBoundary;\n      }\n    }\n    if (horizon[i].start < boundary.y1) {\n      changedHorizon[0].start = boundary.y1;\n      changedHorizon.unshift({\n        start: horizon[i].start,\n        end: boundary.y1,\n        boundary: horizon[i].boundary,\n      });\n    }\n    if (boundary.y2 < horizon[j].end) {\n      changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n      changedHorizon.push({\n        start: boundary.y2,\n        end: horizon[j].end,\n        boundary: horizon[j].boundary,\n      });\n    }\n\n    // Set x2 new of boundary that is no longer visible (see overlapping case\n    // above).\n    // TODO more efficient, e.g. via reference counting.\n    for (q = i; q <= j; q++) {\n      horizonPart = horizon[q];\n      affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New !== undefined) {\n        continue;\n      }\n      let used = false;\n      for (\n        k = i - 1;\n        !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n        k--\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (\n        k = j + 1;\n        !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n        k++\n      ) {\n        used = horizon[k].boundary === affectedBoundary;\n      }\n      for (k = 0; !used && k < changedHorizon.length; k++) {\n        used = changedHorizon[k].boundary === affectedBoundary;\n      }\n      if (!used) {\n        affectedBoundary.x2New = maxXNew;\n      }\n    }\n\n    Array.prototype.splice.apply(\n      horizon,\n      [i, j - i + 1].concat(changedHorizon)\n    );\n  }\n\n  // Set new x2 for all unset boundaries.\n  for (const horizonPart of horizon) {\n    const affectedBoundary = horizonPart.boundary;\n    if (affectedBoundary.x2New === undefined) {\n      affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n    }\n  }\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n      this._reader = null;\n    }\n    if (this._renderTimer !== null) {\n      clearTimeout(this._renderTimer);\n      this._renderTimer = null;\n    }\n    this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (let i = 0, len = items.length; i < len; i++) {\n      if (items[i].str === undefined) {\n        if (\n          items[i].type === \"beginMarkedContentProps\" ||\n          items[i].type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (items[i].id !== null) {\n            this._container.setAttribute(\"id\", `${items[i].id}`);\n          }\n          parent.appendChild(this._container);\n        } else if (items[i].type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(items[i].str);\n      appendText(this, items[i], styleCache, this._layoutTextCtx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = this._textDivProperties.get(textDiv);\n\n    let transform = \"\";\n    if (textDivProperties.canvasWidth !== 0 && textDivProperties.hasText) {\n      const { fontSize, fontFamily } = textDiv.style;\n\n      // Only build font string and set to context if different from last.\n      if (\n        fontSize !== this._layoutTextLastFontSize ||\n        fontFamily !== this._layoutTextLastFontFamily\n      ) {\n        this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n        this._layoutTextLastFontSize = fontSize;\n        this._layoutTextLastFontFamily = fontFamily;\n      }\n      // Only measure the width for multi-char text divs, see `appendText`.\n      try { // #707 modified by ngx-extended-pdf-viewer\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      } catch (fingerprintIsBlockedException) {} // #707 modified by ngx-extended-pdf-viewer\n    }\n    if (textDivProperties.angle !== 0) {\n      transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n    }\n    if (transform.length > 0) {\n      if (this._enhanceTextSelection) {\n        textDivProperties.originalTransform = transform;\n      }\n      textDiv.style.transform = transform;\n    }\n\n    if (textDivProperties.hasText) {\n      this._container.appendChild(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.appendChild(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render(timeout = 0) {\n    const capability = createPromiseCapability();\n    let styleCache = Object.create(null);\n\n    // The temporary canvas is used to measure text length in the DOM.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.height = canvas.width = DEFAULT_FONT_SIZE;\n\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n    ) {\n      canvas.mozOpaque = true;\n    }\n    this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n    if (this._textContent) {\n      const textItems = this._textContent.items;\n      const textStyles = this._textContent.styles;\n      this._processItems(textItems, textStyles);\n      capability.resolve();\n    } else if (this._textContentStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentStream.getReader();\n      pump();\n    } else {\n      throw new Error(\n        'Neither \"textContent\" nor \"textContentStream\"' +\n          \" parameters specified.\"\n      );\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      if (!timeout) {\n        // Render right away\n        render(this);\n      } else {\n        // Schedule\n        this._renderTimer = setTimeout(() => {\n          render(this);\n          this._renderTimer = null;\n        }, timeout);\n      }\n    }, this._capability.reject);\n  }\n\n  /**\n   * @param {boolean} [expandDivs]\n   */\n  expandTextDivs(expandDivs = false) {\n    if (!this._enhanceTextSelection || !this._renderingDone) {\n      return;\n    }\n    if (this._bounds !== null) {\n      expand(this);\n      this._bounds = null;\n    }\n    const transformBuf = [],\n      paddingBuf = [];\n\n    for (let i = 0, ii = this._textDivs.length; i < ii; i++) {\n      const div = this._textDivs[i];\n      const divProps = this._textDivProperties.get(div);\n\n      if (!divProps.hasText) {\n        continue;\n      }\n      if (expandDivs) {\n        transformBuf.length = 0;\n        paddingBuf.length = 0;\n\n        if (divProps.originalTransform) {\n          transformBuf.push(divProps.originalTransform);\n        }\n        if (divProps.paddingTop > 0) {\n          paddingBuf.push(`${divProps.paddingTop}px`);\n          transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingRight > 0) {\n          paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingBottom > 0) {\n          paddingBuf.push(`${divProps.paddingBottom}px`);\n        } else {\n          paddingBuf.push(0);\n        }\n        if (divProps.paddingLeft > 0) {\n          paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n          transformBuf.push(\n            `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n          );\n        } else {\n          paddingBuf.push(0);\n        }\n\n        div.style.padding = paddingBuf.join(\" \");\n        if (transformBuf.length) {\n          div.style.transform = transformBuf.join(\" \");\n        }\n      } else {\n        div.style.padding = null;\n        div.style.transform = divProps.originalTransform;\n      }\n    }\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} renderParameters\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(renderParameters) {\n  const task = new TextLayerRenderTask({\n    textContent: renderParameters.textContent,\n    textContentStream: renderParameters.textContentStream,\n    container: renderParameters.container,\n    viewport: renderParameters.viewport,\n    textDivs: renderParameters.textDivs,\n    textContentItemsStr: renderParameters.textContentItemsStr,\n    enhanceTextSelection: renderParameters.enhanceTextSelection,\n  });\n  task._render(renderParameters.timeout);\n  return task;\n}\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\n// modified by ngx-extended-pdf-viewer\n// import { isNodeJS } from \"../shared/is_node.js\";\n// end of modification\n\n/** @type {any} */\nlet SVGGraphics = class {\n  constructor() {\n    unreachable(\"Not implemented: SVGGraphics\");\n  }\n};\n\nif (\n  typeof PDFJSDev === \"undefined\" ||\n  PDFJSDev.test(\"!PRODUCTION || GENERIC\")\n) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    // modified by ngx-extended-pdf-viewer - we don't need node.js support \n    function deflateSync(literals) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n    }\n    // end of modification\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  SVGGraphics = class {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.hypot(a, b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n      current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement?.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeHexColor(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeHexColor(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n        ...Util.applyTransform([x0, y0], matrix),\n        ...Util.applyTransform([x1, y1], matrix),\n      ]);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeHexColor(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        for (const prev of this.extraStack) {\n          prev.clipGroup = null;\n        }\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, { value: event.target.getAttribute(\"xfaOn\") });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes(html, element, storage, intent) {\n    const { attributes } = element;\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      // We don't need to add dataId in the html object but it can\n      // be useful to know its value when writing printing tests:\n      // in this case, don't skip dataId to have its value.\n      if (value === null || value === undefined || key === \"dataId\") {\n        continue;\n      }\n\n      if (key !== \"style\") {\n        if (key === \"textContent\") {\n          html.textContent = value;\n        } else if (key === \"class\") {\n          html.setAttribute(key, value.join(\" \"));\n        } else {\n          html.setAttribute(key, value);\n        }\n      } else {\n        Object.assign(html.style, value);\n      }\n    }\n\n    // Set the value after the others to be sure overwrite\n    // any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const root = parameters.xfa;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes(rootHtml, root);\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.appendChild(rootHtml);\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    rootDiv.style.transform = transform;\n\n    // Set defaults.\n    rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack[stack.length - 1];\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack[stack.length - 1][1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        html.appendChild(document.createTextNode(child.value));\n        continue;\n      }\n\n      let childHtml;\n      if (child?.attributes?.xmlns) {\n        childHtml = document.createElementNS(child.attributes.xmlns, name);\n      } else {\n        childHtml = document.createElement(name);\n      }\n\n      html.appendChild(childHtml);\n      if (child.attributes) {\n        this.setAttributes(childHtml, child, storage, intent);\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        childHtml.appendChild(document.createTextNode(child.value));\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n  }\n\n  /**\n   * Update the xfa layer.\n   *\n   * @public\n   * @param {XfaLayerParameters} parameters\n   * @memberof XfaLayer\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      // modified by ngx-extended-pdf-viewer #864\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\" || this.url.protocol === \"capacitor:\";\n    // end of modification by ngx-extended-pdf-viewer #864\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(exception);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController?.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(reason => {\n        if (reason?.name === \"AbortError\") {\n          return;\n        }\n        throw reason;\n      });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable sort-exports/sort-exports */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isPdfFile,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { isNodeJS } from \"./shared/is_node.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n\n  setPDFNetworkStreamFactory(async params => {\n    const [{ PDFNetworkStream }, { PDFFetchStream }] = await streamsPromise;\n    if (isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n} else if (PDFJSDev.test(\"GENERIC || CHROME\")) {\n  if (PDFJSDev.test(\"GENERIC\") && isNodeJS) {\n    const { PDFNodeStream } = require(\"./display/node_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const { PDFNetworkStream } = require(\"./display/network.js\");\n    const { PDFFetchStream } = require(\"./display/fetch_stream.js\");\n\n    setPDFNetworkStreamFactory(params => {\n      if (isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  isPdfFile,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  getXfaPageViewport,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n  // From \"./display/xfa_layer.js\":\n  XfaLayer,\n};\n"]}